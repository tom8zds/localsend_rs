// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../actor/model.dart';
import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'model.freezed.dart';

class SessionVm {
  final String id;
  final NodeDevice node;
  final List<TaskVm> tasks;
  final Status status;

  const SessionVm({
    required this.id,
    required this.node,
    required this.tasks,
    required this.status,
  });

  @override
  int get hashCode =>
      id.hashCode ^ node.hashCode ^ tasks.hashCode ^ status.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SessionVm &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          node == other.node &&
          tasks == other.tasks &&
          status == other.status;
}

@freezed
sealed class Status with _$Status {
  const Status._();

  const factory Status.pending() = Status_Pending;
  const factory Status.transfer({
    required BigInt startTime,
  }) = Status_Transfer;
  const factory Status.finish() = Status_Finish;
  const factory Status.fail({
    required String msg,
  }) = Status_Fail;
  const factory Status.cancel() = Status_Cancel;
  const factory Status.rejected() = Status_Rejected;
}

class TaskVm {
  final String id;
  final String name;
  final BigInt size;
  final Status status;

  const TaskVm({
    required this.id,
    required this.name,
    required this.size,
    required this.status,
  });

  @override
  int get hashCode =>
      id.hashCode ^ name.hashCode ^ size.hashCode ^ status.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TaskVm &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name &&
          size == other.size &&
          status == other.status;
}
